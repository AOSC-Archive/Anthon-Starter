<!-- 最后修订：黎民雍 -->

== 概述 ==

'''安同开始程序'''（英文名'''Anthon-Starter'''）是一款操作系统安装助手类软件，由安同开源社区发起并维护，提供给安同开源社区各发行版从其他操作系统通过硬盘安装系统的功能的软件。

目前项目正在缓慢发展中。

<!--概述 -->
== 程序信息 ==

* 平台：Microsoft(R) Windows(R)
* 编译器：[http://zh.wikipedia.org/wiki/MinGW MinGW]（[http://zh.wikipedia.org/wiki/GCC GCC]）
* 使用的编程语言：[http://zh.wikipedia.org/wiki/C%E8%AF%AD%E8%A8%80 C]
* 协议：[http://zh.wikipedia.org/wiki/GNU%E9%80%9A%E7%94%A8%E5%85%AC%E5%85%B1%E8%AE%B8%E5%8F%AF%E8%AF%81#GPLv3 GNU GPL 3.0]
* 源码：https://github.com/AOSC-Dev/Anthon-Starter

您可以使用 Git 并通过以下命令：

<code>
git clone https://github.com/AOSC-Dev/Anthon-Starter.git
</code>

来下载最新版本的源代码。

<!-- 程序信息 -->
== 版本历史 & 计划 ==

=== 0.1.0 代系 ===

 0.1.0.0：2012/2/9发布；
 0.1.0.3：2012/2/17发布；
 【已停止支持】于：2013/7/1

0.1.0 代系版本首次实现了安同 OS 的硬盘安装功能，使用 Delphi 7 制作界面，但核心仍是批处理；0.1.0.3 中则针对引导器做了一些小修改和错误修复。

=== 0.1.1 代系 ===

 0.1.1.0：2013/6/27发布；
 0.1.1.1：2013/7/6发布；
 0.1.1.2：2013/7/19发布；
 0.1.1.3：2013/8/3发布（稳定版本）；
 【已停止支持】于：2014/2/1

0.1.1 代系去除了 GUI 并实现了 CLI 的界面，全部采用批处理编写并去除了 0.1.0 中可能有版权争议的组件；软件默认修改NT系统引导器来引导 GRUB4DOS 0.4.4 并引导至安同-EHL3安装器；支持简体中文、繁体中文、英语和德语；支持 NT6 权限管理。

=== 0.1.2 代系 ===

 0.1.2.0：2014/7/10发布；
 【已停止支持】于：2014/8/28

0.1.2 代系大幅度精简及优化了程序体，去除德语及繁体中文的支持，增加对 GPT + EFI 组合计算机的支持；增加映像校验、OS2 发行版支持；更新一系列组件。

=== 0.2 代系计划 ===

0.2 使用 C 语言将程序全部重写。前期将只拥有命令行界面，后期将添加简单的图形界面，并且带自动探测系统配置功能。

本版本目前在 [https://github.com/AOSC-Dev/Anthon-Starter Github] 上有源码的每日推送，位于 <code>0.2.0-devel</code> 分支。

=== 0.3 代系计划 ===

0.3 将在整合 0.2 功能的情况下，编写步骤化的、更易于使用的图形用户界面。

=== 0.4 代系计划 ===

0.4.x 将努力实现直接在 Windows 下安装 AOSC 发行版的功能，并整合对系统的配置，相当于安装程序。

'''也许并非 wubi 式。'''

<!-- 版本历史 & 计划 -->
== 程序架构 ==

=== 函数原型一览（funcs.h） ===

'''注意：本段并未完成。'''

==== 检查参数 ====

 int chkargs ( int argc, char **argv,
               char *osimage, char *ostarget,
               img *imginfo, int *instform, int *verbose_mode, int *quiet_mode,
               int *will_pause, int *will_reboot, int *will_verify, int *will_extract );

<code>chkargs</code> 将根据命令行参数中的各个开关定义变量，包括：

* <code>osimage</code> 是一个指向映像文件路径的字串；
* <code>ostarget</code> 是一个指向映像文件中的 <code>live.squashfs</code> 文件应该被解压的路径的字串；
* <code>imginfo</code> 是一个 <code>img</code> 类型结构，它的定义为（funcs.h）：

 typedef struct
 {
     int os;			/* 表示 AOSC OS 代系 */
     char *dist,			/* AOSC OS 派生版本四字代号 */
          *ver,			/* 此系统版本信息 */
          *lang,			/* 此系统的语言 */
          *vmlinuz_chksum,	/* 此映像文件中 vmlinuz 文件的 MD5 校验码值 */
          *initrd_chksum,	/* 此映像文件中 initrd 文件的 MD5 校验码值 */
          *livesq_chksum;	/* 此映像文件中 live.squashfs 文件的 MD5 校验码值 */
 } img;

* <code>instform</code> 用整数来代表将要使用什么方法来部署启动，它的定义为（defs.h）：

 # define EDIT_PRESENT 1
 # define EDIT_MBR 2
 # define EDIT_ESP 3
 # define EDIT_DONOT 5

* <code>verbose_mode</code> 用整数 0 或 1 表示是否输出尽可能'''多'''的信息；
* <code>quiet_mode</code> 用整数 0 或 1 表示是否输出尽可能'''少'''的信息；
* <code>will_pause</code> 用整数 0 或 1 表示是否在操作完成后暂停，不管是成功或者是失败；
* <code>will_reboot</code> 用整数 0 或 1 表示是否在操作完成后自动执行重启；
* <code>will_verify</code> 用整数 15 表示是否校验文件正确性；
* <code>will_extract</code> 用整数 16 表示是否解压文件；

==== 运行程序 ====

为了减少 <code>main</code> 函数的长度，使用以下函数：

 int run ( char *osimage, char *ostarget,
           img *imginfo, int instform, int verbose_mode, int quiet_mode,
           int will_pause, int will_reboot, int will_verify, int will_extract );

来包括所有正式执行工作的函数。

==== 初始化 ====

初始化安同开始程序，包括：

* 检查自身完整性；
* 检查指向的映像文件正确性；

 int init ( img *imginfo, char *osimage, char *ostarget );

==== 获取系统信息 ====

 int getsysinfo ( int *loader, int ptable, char *systemdrive );

其中，函数调用了 WinAPI 来获得很多的系统信息，其中包括：

* 系统盘位置；
* 分区表类型；
* 系统引导器类型；
* 系统盘剩余容量；
* 处理器架构；
* 内存大小

==== 备份关键位置 ====

 int backup ( int loader, int ptable );

==== 解压缩映像文件 ====

 int extract ( int will_extract, char *osimage, char *ostarget );

==== 校验文件 ====

 int verify ( int will_verify, char *ostarget );

==== 部署启动 ====

 int deploy ( int loader, int ptable );

==== Startup ====

 int startup ();

==== 其它辅助函数 ====

===== 显示帮助信息 =====

 int help_message ( char *progname );

===== 向终端打印彩色字符 =====

 void clrprintf ( WORD color, char* format, ... );

===== 更方便地向终端输出 =====

 void notify ( int TNotice, char *format, ... );

===== 更方便地挂空指针 =====

 int take ( void *ptr );

===== 快速 MD5 校验 =====

 int md5sum ( char *rtn, char *file );


=== 软件体系 ===

 命令行参数 > main() -- chkargs() ----- run() -- (return) > 退出
                                   |  |   |
                                   |  |   |-> init() -- md5sum()
                                   |  |   |           \-- 遇到错误 --> 退出
                                   |  |   |-> getsysinfo()
              clrprintf()          |  |   |-> backup()
              notify()             |  |   |-> extract() 
              take()               |  |   |-> verify()
                                   |  |   |-> deploy()
                                   |  |   |-> (return)
                                   |  |
                                   |  |-> startup() --> 退出
                                   |
                                   |-> help_message() --> 退出

<!-- 程序架构 -->
== 进入开发 ==

=== 从源码构建 ===

安同开始程序使用 [http://zh.wikipedia.org/wiki/Make#GNU_make GNU Make] 来构建程序，Makefile 置于源码树根目录下，只需要在源码树根目录下执行 make 即可。

在 Windows 环境中，构建安同开始程序需要：

* mingw32 (gcc)
* msys
* git （可选，用于 clone 代码仓库）

为了保证程序的便携性，我们不采用 [http://zh.wikipedia.org/wiki/Cygwin Cygwin] 环境，因为那需要第三方 [http://zh.wikipedia.org/wiki/POSIX POSIX] 兼容库，体积比较庞大。

另外，若需要在 Linux 下通过交叉编译来构建安同开始程序，只需要：

* mingw32

就可以了。注意，现阶段安同开始程序未提供 [http://zh.wikipedia.org/wiki/Autoconf configure] 脚本，因此在执行 make 时需要手动调节这些变量：<code>$(CC)</code>，<code>$(LD)</code> 以及 <code>$(RES)</code>，否则将不能通过编译。也许可以这样：

 make CC=i586-mingw32msvc-gcc LD=i586-mingw32msvc-gcc RES=i586-mingw32msvc-windres

来通过 mingw32 交叉编译安同开始程序。

=== 反馈 ===

安同开始程序欢迎任何人对项目提交代码以及做出任何形式的贡献：

==== 反馈代码 ====

安同开始程序的代码托管在 https://github.com/AOSC-Dev/Anthon-Starter 上，任何 AOSC-Dev 的成员均有推送源码的权限。若没有，可以：

# Fork 代码仓库；
# 对代码进行修改；
# 向 AOSC-Dev/Anthon-Starter 提交 Pull Request。
#* 给我们发送 patch 文件也可以。

==== 报告缺陷 ====

安同开始程序接受来自两个地方的缺陷报告：

* [https://github.com/AOSC-Dev/Anthon-Starter/issues Github Issue]
* [https://bugs.anthonos.org AOSC 缺陷报告平台]

在“AOSC 缺陷报告平台”上报告问题时，请注意选择 ''Anthon-Starter'' 类别。开发小组将在 2 周内给予答复并采取必要的措施。

== 使用组件一览 ==

目前无法统计安同开始程序到底会使用哪些组件。

<!-- 使用组件一览 -->
== 小组人员 ==

* 黎民雍 <lmy441900@gmail.com>
* 刘子兴 <liushuyu011@gmail.com>
* 杜旻晖 <duminghui@126.com>
* 罗超 <campermsn@gmail.com>
* 许皓鸣 <18929292333@163.com>

联系我们，您可以：

* 加入安同开源社区 IRC 频道 <code>#anthon</code>
* 加入安同社区交流群（QQ群）<code>125016052</code>

欢迎您的参与！

<!-- 小组人员 -->
